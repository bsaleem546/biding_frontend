{"remainingRequest":"C:\\Users\\Pc\\Desktop\\bilal\\biding\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Pc\\Desktop\\bilal\\biding\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Pc\\Desktop\\bilal\\biding\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Pc\\Desktop\\bilal\\biding\\frontend\\src\\components\\Navbar.vue?vue&type=template&id=41458b80&","dependencies":[{"path":"C:\\Users\\Pc\\Desktop\\bilal\\biding\\frontend\\src\\components\\Navbar.vue","mtime":1642574876577},{"path":"C:\\Users\\Pc\\Desktop\\bilal\\biding\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Pc\\Desktop\\bilal\\biding\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Pc\\Desktop\\bilal\\biding\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Pc\\Desktop\\bilal\\biding\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}